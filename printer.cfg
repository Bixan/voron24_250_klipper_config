# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/ttyAMA0
restart_method: command
##--------------------------------------------------------------------

[mcu sht36]
canbus_uuid: fbb69727087c
# canbus_uuid: ecca6264b557

[adxl345]
cs_pin: sht36:PA4
# spi_software_sclk_pin: sht36:PA5
# spi_software_mosi_pin: sht36:PA7
# spi_software_miso_pin: sht36:PA6
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    125, 125, 20  # an example

##--------------------Stealthburner Leds------------------------------------------------
[include stealthburner_leds.cfg]


[printer]
kinematics: corexy
max_velocity: 1000  
max_accel: 30000             #Max 4000
max_z_velocity: 50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 8.0

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: sht36:PA0 
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
position_endstop: 250
position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
# [tmc2209 stepper_x]
# uart_pin: PC4
# interpolate: false
# run_current: 1.2
# sense_resistor: 0.110
# stealthchop_threshold: 0

# TMC 5160 pro 55V
[tmc5160 stepper_x]
cs_pin: PC4
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
# spi_bus: spi1
interpolate: false
run_current: 0.9
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
position_endstop: 250
position_max: 251

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 351

##--------------------------------------------------------------------
homing_speed: 80  #Max 100
second_homing_speed: 10
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
# [tmc2209 stepper_y]
# uart_pin: PD11
# interpolate: false
# run_current: 1.2
# sense_resistor: 0.110
# stealthchop_threshold: 0

# TMC 5160 pro 55V
[tmc5160 stepper_y]
cs_pin: PD11
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
# spi_bus: spi1
interpolate: false
run_current: 0.9
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
##-----if using sexbolt as z endstop------
endstop_pin: PG10
#position_endstop: -1.225

##-----if using klicky as z endstop
#endstop_pin: probe:z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
position_max: 210

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
#position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - PT100
[extruder]
step_pin: sht36:PB4
dir_pin: sht36:PB3
enable_pin: !sht36:PA15
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
# rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 5.596  # Bondtech LGX lite
# rotation_distance: 4.637  # orbiter 2.0
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
# gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: sht36:PA8
# sensor_type: ATC Semitec 104GT-2
sensor_type: PT1000
sensor_pin: sht36:PB0
pullup_resistor: 2200

#   One of "MAX6675", "MAX31855", "MAX31856", or "MAX31865".
#sensor_pin: PD3

#   The chip select line for the sensor chip. This parameter must be
#   provided.
# spi_speed: 2000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 4000000.
# spi_software_sclk_pin: EXP2_2
# spi_software_mosi_pin: EXP2_6
# spi_software_miso_pin: EXP2_1
#   See the "common SPI settings" section for a description of the
#   above parameters.
#tc_type: K
#tc_use_50Hz_filter: False
#tc_averaging_count: 1
#   The above parameters control the sensor parameters of MAX31856
#   chips. The defaults for each parameter are next to the parameter
#   name in the above list.
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 4
#rtd_use_50Hz_filter: False
#   The above parameters control the sensor parameters of MAX31865
#   chips. The defaults for each parameter are next to the parameter
#   name in the above list.
#control: pid
#pid_kp = 19.755
#pid_ki = 0.770
#pid_kd = 126.680
min_extrude_temp: 180
#   The minimum temperature (in Celsius) at which extruder move
#   commands may be issued. The default is 170 Celsius.
min_temp: -273
max_temp: 380

max_extrude_only_distance: 200

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: sht36:PB5
interpolate: false
run_current: 0.65
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4


[extruder_stepper secondary_extruder]
extruder: extruder
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
rotation_distance = 7.832  # Bondtech LGX
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 extruder_stepper secondary_extruder]
uart_pin: PE1
interpolate: false
run_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF4
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.75
min_temp: -273
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[temperature_sensor buildplate]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: -273
max_temp: 120


# [temperature_sensor chamber]
# sensor_type: Generic 3950
# sensor_pin: PF3
# min_temp: -40
# max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: -273
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: -273
max_temp: 100

[temperature_sensor FLY-SHT36]
sensor_type: temperature_mcu
sensor_mcu: sht36
min_temp: -273
max_temp: 100


## PT100 settings
# [temperature_sensor PT100]
# sensor_type: MAX31865
# sensor_pin: sht36:PA3
# spi_bus: spi1
# min_temp: -50
# max_temp: 350
# rtd_reference_r: 430
# rtd_num_of_wires: 4

#####################################################################
#   Probe
#####################################################################

[probe]
##---Klicky Probe----------
pin: ^sht36:PA1
##---OMRON Q5MC2-----------
#pin: ~!PC5  

#--------------------------------------------------------------------

z_offset: 6.42
x_offset: 0 
y_offset: 19.75
speed: 7
samples: 3
samples_result: median
sample_retract_dist: 0.5
samples_tolerance: 0.01
samples_tolerance_retries: 5

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: sht36:PB11
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively


[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: sht36:PB10
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0


# Electronic Bay Fans
[multi_pin electronic_bay_fan_pins]
pins: PA8,PE5

[controller_fan electronic_bay_fans]
pin: multi_pin:electronic_bay_fan_pins
kick_start_time: 0.5
max_power: 0.3
shutdown_speed: 0.0
idle_timeout: 150  # 150s after the motor is deactivated
stepper: stepper_x,stepper_y,stepper_z,stepper_z1,stepper_z2,stepper_z3,extruder
heater: extruder

[fan_generic nevermore_fan]
pin: PD12
max_power: 1.0
shutdown_speed: 0.0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:68.5,251
# speed:100
# z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
gantry_corners:
   -60,-10
   310, 320
#  Probe points
points:
   50,25
   50,175
   200,175
   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
# gantry_corners:
#  -60,-10
#  410,420
#  Probe points
#points:
#  50,25
#  50,275
#  300,275
#  300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 210,210

fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

[gcode_arcs]
resolution: 0.05
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.


########################################
# Filament sensor 
########################################
[filament_motion_sensor smart_filament_sensor]
detection_length: 10.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: PG12
#pause_on_runout:
#runout_gcode:
insert_gcode: ON_FILAMENT_INSERTED
event_delay: 3.0
pause_delay: 0.5
#   See the "filament_switch_sensor" section for a description of the
#   above parameters.


[filament_switch_sensor toolhead_sensor]
pause_on_runout: False
# filament sensor wired to the ERB or Printer MCU
switch_pin: ^sht36:PC15 #ERB


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    # EXP2_1=PA6, 
    # EXP2_2=PA5,
    EXP2_3=PB1, 
    EXP2_4=PA4,
    EXP2_5=PB2, 
    # EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, 
    EXP2_8=<RST>,
    EXP2_9=<GND>, 
    EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

# [display]
# #  RepRapDiscount 128x64 Full Graphic Smart Controller
# lcd_type: st7920
# cs_pin: EXP1_4
# sclk_pin: EXP1_5
# sid_pin: EXP1_3
# menu_timeout: 40
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2

# [output_pin beeper]
# pin: EXP1_1

#--------------------------------------------------------------------

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5
# spi_bus: spi1

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


# Firmware retraction
[firmware_retraction]
retract_length: 0.9
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 55
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 35
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#--------------------------------------------------------------------
[include klicky-probe.cfg]
[include mainsail.cfg]
[include test_speed.cfg]
[include nozzle_scrub.cfg]
[include bed_mesh_calibrate_at_print_area.cfg]
[include temperature_color.cfg]
[include filament_autoloader.cfg]

#####################################################################
#   Macros
#####################################################################


[gcode_macro M204]
description: Override the Marlin styled M204 command to set both acceleration and deceleration at the same time. 
rename_existing: M204.1
gcode:
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={s / 2.0}

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}


[gcode_macro MOVE_TO_CENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=move_to_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} Z50 F10000
    RESTORE_GCODE_STATE NAME=move_to_center

[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=part_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} F30000
    RESTORE_GCODE_STATE NAME=part_center

[gcode_macro PARKFRONT]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=park_front
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F30000        
    RESTORE_GCODE_STATE NAME=park_front

[gcode_macro PARKREARRIGHT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F30000     
    RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:    
    # SAVE_GCODE_STATE NAME=start
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(160)|float %}

    # Stop the temperature controlled SB logo led
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=

    # Start the filament sensor
    SFS_ENABLE

    # Set the nozzle and bed to the temperature that is ready to run the QGL and bed mesh
    # Non blocking
    M117 Warmup
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

    # Determine the status of the exhaust fan
    TEMPERATURE_ADJUSTED_PRINT_START_SETTINGS
    TEMPERATURE_ADJUSTED_PRESSURE_ADVANCE

    # Home 
    STATUS_HOMING
    CG28                               ; Home XYZ (if necessary)
    G92 E0

    # Clean the nozzle before grabbing the Klicky
    STATUS_CLEANING
    clean_nozzle

    # set bed temp and wait for it reach temp
    STATUS_HEATING
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP - 0.5}

    # Clear the bed mesh before running QGL
    BED_MESH_CLEAR

    # Attach the probe and keep it until unlock
    Attach_Probe_Lock

    # Run QGL after the bed mesh has been cleared
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL

    # Run bed mesh calibration at printed area (requires slicer support)
    STATUS_MESHING
    BED_MESH_CALIBRATE_AT_PRINT_AREA AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}

    # Put the probe back
    Dock_Probe_Unlock

    # Heat up the nozzle to desired temperature
    STATUS_HEATING

    # Enable temperature adjusted LED colour control
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=temperature_color param_sensor="'extruder'" param_cool_temp=20 param_hot_temp={EXTRUDER_TEMP}
    # Set the extruder temperature, allow overshoot
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

    # Unset the temperature adjusted LED colour control
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=

    # Do a retraction to minimise the oozing
    G1 E-5 F3600

    # Wipe the nozzle but not purge
    STATUS_CLEANING
    clean_nozzle

    # Calibrate Z offset (This will grab Klicky)
    STATUS_CALIBRATING_Z
    CALIBRATE_Z

    # Purge and wipe the nozzle to get ready to print
    STATUS_CLEANING
    clean_nozzle ENABLE_PURGE=true

    G90
    G92 E0                         ; zero the extruder

    # Move up to start printing
    G1 Z2 F5000
    M117 Starting Print
    STATUS_PRINTING


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10 F3600                   ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    # G0  X125 Y250 F3600            ; park nozzle at rear
    # park nozzle at rear
    G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0
    BED_MESH_CLEAR

    # Cleanup the chamber air for another 10 minutes (if enabled)
    UPDATE_DELAYED_GCODE ID=NEVERMORE_FAN_OFF DURATION=600

    STATUS_READY

    # Start the temperature controlled SB logo led
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=temperature_color param_sensor="'extruder'" param_cool_temp=20 param_hot_temp=260

    # Disable SFS after the print finishes
    SFS_DISABLE

    # Restore default acceleration
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 


[gcode_macro Z_CALIBRATION]
gcode:
    CALIBRATE_Z

[delayed_gcode NEVERMORE_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0


# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT to allow temperature overshoot
[gcode_macro M109]
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s}
    {% endif %}


# Replace M190 (Wait for heater bed temperature with TEMPERATURE_WAIT) to allow temperature overshoot and under temperature (within 1 deg)
[gcode_macro M190]
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set heater bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s - 0.5}
    {% endif %}


[gcode_macro TEMPERATURE_ADJUSTED_PRINT_START_SETTINGS]
gcode:
    SAVE_GCODE_STATE NAME=temperature_adjust

    # Cancel any previous delayed event
    UPDATE_DELAYED_GCODE ID=NEVERMORE_FAN_OFF DURATION=0

    # ABS/ASA
    {% if printer.heater_bed.target >= 100 %}
        # Turn on nevermore fan during print
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
    # PETG
    {% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
        # Turn off nevermore fan for PETG
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0
    # Others (PLA/TPU)
    {% else %}
        # Turn on during print but running at reduced speed
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.5
    {% endif %}

    RESTORE_GCODE_STATE NAME=temperature_adjust

[gcode_macro TEMPERATURE_ADJUSTED_PRESSURE_ADVANCE]
gcode:
	# ABS
	{% if printer.heater_bed.target >= 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.055
	# PLA
	{% elif printer.heater_bed.target <= 65 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.045
	# Catch-all
	{% else %}
		SET_PRESSURE_ADVANCE ADVANCE=0.055
	{% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E10 F600                           ; extrude a little to soften tip 
	# G1 E-100 F1800                        ; retract filament completely
    G1 E-50 F1800
    G1 E-50 F1800
    G1 E-25 F1800
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	G1 E50 F600
    G1 E40 F600
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(175)|float %}
    {% set Y = params.Y|default(20)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F3600
    G1 Z10
    PARKFRONT
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state

    SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=1
    SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=2

[gcode_macro ON_FILAMENT_INSERTED]
gcode: 
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1
    SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2


#This will disable the SFS 1 second after klipper starts
[delayed_gcode DISABLEFILAMENTSENSOR] 
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=0

[gcode_macro SFS_ENABLE]
description: Enable smart filament sensor
gcode:
    { action_respond_info("ENABLING the Smart Filament Sensor") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE]
description: Disable smart filament sensor 
gcode:
    { action_respond_info("DISABLING the Smart Filament Sensor") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=


[delayed_gcode SET_TEMPERATURE_CONTROLLED_LED_COLOR]
initial_duration: 1
gcode:
    SET_LED_TEMPLATE LED=btt_mini12864 INDEX=3 TEMPLATE=temperature_color
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=temperature_color param_sensor="'extruder'" param_cool_temp=20 param_hot_temp=260

[gcode_macro DISABLE_TEMPERATURE_CONTROLLED_LOGO_LED_COLOR]
gcode:
    SET_LED_TEMPLATE LED=sb_leds INDEX=1 TEMPLATE=

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.194
#*# pid_ki = 2.069
#*# pid_kd = 437.909
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.649
#*# pid_ki = 2.375
#*# pid_kd = 69.252
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 69.0
#*# shaper_type_y = zv
#*# shaper_freq_y = 49.0
#*#
#*# [stepper_z]
#*# position_endstop = -1.415
